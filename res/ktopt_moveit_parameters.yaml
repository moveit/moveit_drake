ktopt_interface:
  drake_robot_description: {
    type: string,
    description: "Robot description to be loaded by the internal Drake MultibodyPlant",
    default_value: "package://drake_models/franka_description/urdf/panda_arm_hand.urdf",
  }
  num_iterations: {
    type: int,
    description: "Number of iterations for the Drake mathematical program solver.",
    default_value: 1000,
    validation: {
      gt_eq<>: [1]
    }
  }
  num_control_points: {
    type: int,
    description: "Number of control points used to represent the B-Spline.",
    default_value: 10,
    validation: {
      gt_eq<>: [1]
    }
  }
  trajectory_time_step: {
    type: double,
    description: "Timestep resolution, in seconds, where the KTOpt trajectory is evaluated and reported.",
    default_value: 0.01,
    validation: {
      gt<>: [0.0]
    }
  }
  num_collision_check_points: {
    type: int,
    description: "Number of collision checks to perform along the trajectory.",
    default_value: 25,
    validation: {
      gt_eq<>: [2]
    }
  }
  collision_check_lower_distance_bound: {
    type: double,
    description: "Lower bound, in meters, for the collision check minimum distance constraint.",
    default_value: 0.01,
    validation: {
      gt_eq<>: [0.0]
    }
  }
  num_position_constraint_points: {
    type: int,
    description: "Number of points on the path that moveit's bounding box constraint needs to be imposed",
    default_value: 10,
    validation: {
      gt_eq<>: [0.0]
    }
  }
  num_orientation_constraint_points: {
    type: int,
    description: "Number of points on the path where moveit's orientation constraint needs to be imposed",
    default_value: 10,
    validation: {
      gt_eq<>: [0.0]
    }
  }
  joint_jerk_bound: {
    type: double,
    description: "Maximum jerk that is allowed for generated trajectory",
    default_value: 1.0,
    validation: {
      gt_eq<>: [0.0]
    }
  }
